{
  "openapi": "3.0.0",
  "info": {
    "title": "Auth Microservice API",
    "version": "1.0.0",
    "description": "API documentation for the Auth microservice. This service handles user authentication, registration, and profile management. Works in conjunction with the Course Management service for a complete learning platform.",
    "contact": {
      "name": "Development Team",
      "email": "hansajith18@gmail.com",
      "url": "https://github.com/IT21156410/CTSE-SE4010-Assignment-01"
    },
    "termsOfService": "https://github.com/IT21156410/CTSE-SE4010-Assignment-01"
  },
  "servers": [
    {
      "url": "http://localhost:8001",
      "description": "Local development server"
    },
    {
      "url": "http://a7a5a2e8c13e64370819601c6a21ecd0-1066139683.ap-south-1.elb.amazonaws.com:8001",
      "description": "AWS ELB Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "An error occurred"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The user ID",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "description": "The user's name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "The user's phone number",
            "example": "+1234567890"
          },
          "role": {
            "type": "number",
            "description": "The user's role (0=STUDENT, 1=ADMIN, 2=LECTURER)",
            "example": 0,
            "enum": [
              0,
              1,
              2
            ]
          },
          "permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "CREATE_COURSE",
                "UPDATE_COURSE",
                "DELETE_COURSE",
                "ENROLL_COURSE"
              ]
            },
            "description": "The user's permissions",
            "example": [
              "ENROLL_COURSE"
            ]
          },
          "lastLogin": {
            "type": "string",
            "format": "date-time",
            "description": "The user's last login date",
            "example": "2023-01-01T00:00:00Z"
          },
          "isActive": {
            "type": "boolean",
            "description": "Whether the user is active",
            "example": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the user was created",
            "example": "2023-01-01T00:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the user was last updated",
            "example": "2023-01-01T00:00:00Z"
          }
        }
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The user's name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "The user's email",
            "example": "john.doe@example.com"
          },
          "phone": {
            "type": "string",
            "description": "The user's phone number",
            "example": "+1234567890"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "myStrongPassword123"
          }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/User"
          },
          "token": {
            "type": "string",
            "description": "JWT token for authentication",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        }
      },
      "RegisterStudentRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the student",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the student",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for the student",
            "example": "mySecurePassword"
          },
          "role": {
            "type": "number",
            "enum": [
              0
            ],
            "description": "User role (0=STUDENT)",
            "example": 0
          }
        }
      },
      "RegisterLecturerRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the lecturer",
            "example": "Jane Smith"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the lecturer",
            "example": "jane.smith@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for the lecturer",
            "example": "mySecurePassword"
          },
          "role": {
            "type": "number",
            "enum": [
              2
            ],
            "description": "User role (2=LECTURER)",
            "example": 2
          }
        }
      },
      "RegisterAdminRequest": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password",
          "role"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the admin",
            "example": "Admin User"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the admin",
            "example": "admin@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "Password for the admin",
            "example": "mySecurePassword"
          },
          "role": {
            "type": "number",
            "enum": [
              1
            ],
            "description": "User role (1=ADMIN)",
            "example": 1
          }
        }
      },
      "RegisterResponse": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The ID of the newly created user",
            "example": "60d21b4667d0d8992e610c85"
          },
          "name": {
            "type": "string",
            "description": "Name of the registered user",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email of the registered user",
            "example": "john.doe@example.com"
          },
          "role": {
            "type": "number",
            "description": "Role of the registered user",
            "example": 0
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth Service",
      "description": "Authentication APIs"
    },
    {
      "name": "General",
      "description": "General endpoints for service health and information"
    },
    {
      "name": "Auth",
      "description": "Authentication endpoints for login and registration"
    },
    {
      "name": "User",
      "description": "User profile management endpoints"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "summary": "API root endpoint",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "Welcome message",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "Auth serviceâ„¢ API"
                }
              }
            }
          }
        },
        "x-order": 0
      }
    },
    "/test": {
      "get": {
        "summary": "Test the Auth Service",
        "tags": [
          "General"
        ],
        "responses": {
          "200": {
            "description": "Successfully tested"
          },
          "401": {
            "description": "Unauthorized access"
          }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login a user",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "User credentials for authentication",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest",
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "User's email address",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "User's password",
                    "example": "myStrongPassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User logged as Student!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/LoginResponse"
                    },
                    "token": {
                      "type": "string",
                      "description": "JWT token for the logged-in user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          },
          "422": {
            "description": "Validation error"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Register a new user as Student, Lecturer, or Admin based on the role parameter",
        "tags": [
          "Auth"
        ],
        "requestBody": {
          "description": "Registration data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RegisterStudentRequest"
                  },
                  {
                    "$ref": "#/components/schemas/RegisterLecturerRequest"
                  },
                  {
                    "$ref": "#/components/schemas/RegisterAdminRequest"
                  }
                ],
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "role",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the user",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email address of the user",
                    "example": "john.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "description": "Password for the user",
                    "example": "mySecurePassword"
                  },
                  "role": {
                    "type": "number",
                    "enum": [
                      0,
                      1,
                      2
                    ],
                    "description": "User role (0=STUDENT, 1=ADMIN, 2=LECTURER)",
                    "example": 0
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User Registered as Student!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/RegisterResponse"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the newly created user",
                      "example": "1234567890abcdefg"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the registered user",
                      "example": "John Doe"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized attempt to register as Admin"
          },
          "409": {
            "description": "User already exists"
          },
          "422": {
            "description": "Validation error or invalid role"
          }
        }
      }
    },
    "/me": {
      "get": {
        "summary": "Get current user information",
        "description": "Retrieves the profile information of the currently authenticated user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User profile retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Not allowed to access this resource"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "put": {
        "summary": "Update current user information",
        "description": "Updates the profile information of the currently authenticated user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "description": "User information to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User profile updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User updated successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Not allowed to access this resource"
          },
          "422": {
            "description": "Validation error - Email already exists"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Deactivate current user account",
        "description": "Deactivates the account of the currently authenticated user",
        "tags": [
          "User"
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User account deactivated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "message": {
                      "type": "string",
                      "example": "User deactivated successfully!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/User"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "403": {
            "description": "Forbidden - Not allowed to access this resource"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  }
}